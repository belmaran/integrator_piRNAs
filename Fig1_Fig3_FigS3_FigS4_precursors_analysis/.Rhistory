length(which(lfcdata_both$scRNA_log2FoldChange<(-1) & lfcdata_both$CAGE_log2FoldChange>1))
scUP_cageUP<-lfcdata_both[which(lfcdata_both$scRNA_log2FoldChange>1 & lfcdata_both$CAGE_log2FoldChange>1),"Row.names"]
scDOWN_cageDOWN<-lfcdata_both[which(lfcdata_both$scRNA_log2FoldChange<(-1) & lfcdata_both$CAGE_log2FoldChange<(-1)),"Row.names"]
scUP_cageDOWN<-lfcdata_both[which(lfcdata_both$scRNA_log2FoldChange>1 & lfcdata_both$CAGE_log2FoldChange<(-1)),"Row.names"]
scDOWN_cageUP<-lfcdata_both[which(lfcdata_both$scRNA_log2FoldChange<(-1) & lfcdata_both$CAGE_log2FoldChange>1),"Row.names"]
#logfcdata all sig and nonsig
lfcdata_ALL<-merge(data.frame(scRNA_res),data.frame(CAGE_res),by="row.names")
cor(lfcdata_ALL$scRNA_log2FoldChange,lfcdata_ALL$CAGE_log2FoldChange)
plot(lfcdata_ALL$scRNA_log2FoldChange,lfcdata_ALL$CAGE_log2FoldChange)
fit<-lm(lfcdata_ALL$CAGE_log2FoldChange ~ lfcdata_ALL$scRNA_log2FoldChange)
summary(fit)
ggplot(lfcdata_ALL)+geom_point(aes(x=scRNA_log2FoldChange,y=CAGE_log2FoldChange))
ggplot(lfcdata_ALL)+geom_point(aes(x=scRNA_log2FoldChange,y=CAGE_log2FoldChange,col=scRNA_sig+CAGE_sig))+
geom_hline(yintercept=1,linetype="dashed",col="grey")+
geom_hline(yintercept=-1,linetype="dashed",col="grey")+
geom_vline(xintercept=1,linetype="dashed",col="grey")+
geom_vline(xintercept=-1,linetype="dashed",col="grey")+
geom_abline(intercept = 0.22705, slope=0.55356, col="red")+
ggtitle("all genes detected in both experiments")
theme_classic()
ggsave("scRNA_vs_CAGE_lfc_promoters_ALLnofilter.pdf",width = 8,height = 5)
allgenes_scDOWN_CAGEup_nonsig<-lfcdata_ALL[(which(lfcdata_ALL$scRNA_log2FoldChange<(-1) & lfcdata_ALL$CAGE_log2FoldChange>1)),"Row.names"]
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/downsampling_detection_curves/downsampling_detection_curves")
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/downsampling_detection_curves/downsampling_detection_curves")
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/downsampling_detection_curves/downsampling_detection_curves")
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/downsampling_detection_curves/")
library(ggplot2)
library(reshape)
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/downsampling_detection_curves/")
dat_Nreads<-read.table("pidetection_depth_totalreadN_downsampling.txt")
colnames(dat_Nreads)<-c("other TSSs","typeI","typeII","nreads","sample")
#type I
N2_EV<-0.5*dat_Nreads$typeI[which(dat_Nreads$sample=="N2_EV1_star2")]+0.5*dat_Nreads$typeI[which(dat_Nreads$sample=="N2_EV2_star2")]
N2_ints11RNAi<-0.5*dat_Nreads$typeI[which(dat_Nreads$sample=="N2_RNAi1_star2")]+0.5*dat_Nreads$typeI[which(dat_Nreads$sample=="N2_RNAi2_star2")]
TFIIS_EV<-dat_Nreads$typeI[which(dat_Nreads$sample=="TFIIS_EV2_star2")]
TFIIS_ints11RNAi<-0.5*dat_Nreads$typeI[which(dat_Nreads$sample=="TFIIS_RNAi1_star2")]+0.5*dat_Nreads$typeI[which(dat_Nreads$sample=="TFIIS_RNAi2_star2")]
total<-dat_Nreads$typeI[which(dat_Nreads$sample=="TEV_star2")]
nreads<-dat_Nreads[which(dat_Nreads$sample=="N2_EV1_star2"),"nreads"]
dat_Nreads_agg<-melt(data.frame(N2_EV,
N2_ints11RNAi,
TFIIS_EV,
TFIIS_ints11RNAi,
total,
nreads),measure.vars=c("N2_EV","N2_ints11RNAi","TFIIS_EV","TFIIS_ints11RNAi","total"))
ggplot(dat_Nreads_agg)+geom_boxplot(aes(y=value,x=factor(nreads),fill=variable,col=variable),outlier.shape=NA)+theme_classic()+
ggtitle("type I piRNAs")+
ylab("total detected loci")+
ggsave("total_detected_typeIpis_by_readcount.pdf")
#type II
N2_EV<-0.5*dat_Nreads$typeII[which(dat_Nreads$sample=="N2_EV1_star2")]+0.5*dat_Nreads$typeII[which(dat_Nreads$sample=="N2_EV2_star2")]
N2_ints11RNAi<-0.5*dat_Nreads$typeII[which(dat_Nreads$sample=="N2_RNAi1_star2")]+0.5*dat_Nreads$typeII[which(dat_Nreads$sample=="N2_RNAi2_star2")]
TFIIS_EV<-dat_Nreads$typeII[which(dat_Nreads$sample=="TFIIS_EV2_star2")]
TFIIS_ints11RNAi<-0.5*dat_Nreads$typeII[which(dat_Nreads$sample=="TFIIS_RNAi1_star2")]+0.5*dat_Nreads$typeII[which(dat_Nreads$sample=="TFIIS_RNAi2_star2")]
total<-dat_Nreads$typeII[which(dat_Nreads$sample=="TEV_star2")]
nreads<-dat_Nreads[which(dat_Nreads$sample=="N2_EV1_star2"),"nreads"]
dat_Nreads_agg<-melt(data.frame(N2_EV,
N2_ints11RNAi,
TFIIS_EV,
TFIIS_ints11RNAi,
total,
nreads),measure.vars=c("N2_EV","N2_ints11RNAi","TFIIS_EV","TFIIS_ints11RNAi","total"))
ggplot(dat_Nreads_agg)+geom_boxplot(aes(y=value,x=factor(nreads),fill=variable,col=variable),outlier.shape=NA)+theme_classic()+
ggtitle("type II piRNAs")+
ylab("total detected loci")+
ggsave("total_detected_typeIIpis_by_readcount.pdf")
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/downsampling_detection_curves/downsampling_detection_curves")
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/downsampling_detection_curves/")
tss_rawtags<-read.table("../CTSSrawTags.csv",sep=",",header=TRUE,row.names=1)
pis<-read.table("../piRNAnormalisedExpression.csv",sep=",",header=TRUE,row.names=1)
pis<-pis[which(pis$dist==2),]
pis_typeI<-pis[which(pis$dist==2 & (pis$name=="21UR" | pis$name=="piRNA_type1")),]
nrow(unique(pis_typeI[,1:3]))
pi_tss<-unique(pis[,c("chr","pos","strand","name")])
tss_rawtags_pi_info<-merge(tss_rawtags,pi_tss,by.x=c("chr","pos","strand"),by.y=c("chr","pos","strand"),all.x=TRUE)
nrow(pi_tss)
nrow(tss_rawtags)
nrow(tss_rawtags_pi_info)
tss_rawtags_pi_info$name<-as.character(tss_rawtags_pi_info$name)
tss_rawtags_pi_info$name[is.na(tss_rawtags_pi_info$name)]<-"noPieInDaSky"
table(tss_rawtags_pi_info$name)
colSums(tss_rawtags_pi_info[,c(4:11)])
nrow(tss_rawtags_pi_info[which(tss_rawtags_pi_info$N2_EV1_star2>0 & tss_rawtags_pi_info$name=="21UR"),])
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/pi_landscape_heatmap")
scrna_data<-read.table("chbound_scRNA_counts_typeI_and_typeIIpis.txt")
scrna_data$mean<-apply(scrna_data,MARGIN=1,FUN=mean)
cage_detected<-read.table("pis_detected_CAGE_ids")
scrna_data$CAGEdetected<-rep("no",nrow(scrna_data))
scrna_data[which(rownames(scrna_data) %in% cage_detected$V1),"CAGEdetected"]<-"yes"
ggplot(scrna_data)+geom_boxplot(aes(x=CAGEdetected,y=mean),outlier.shape = NA)+
coord_cartesian(ylim=c(0, 8))+ylab("mean scRNA expression")+ggtitle("Type I piRNAs")+theme_classic()
library(gplots)
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/CAGEr_processed_tables/pi_landscape_heatmap")
pi_cpms_distance<-read.table("all_tss_cpms.typeIpis.txt",sep=",",row.names = 1)
pi_cpms_distance$V12<-NULL
pi_cpms_distance$V23<-NULL
pi_cpms_distance$V34<-NULL
pi_cpms_distance$V45<-NULL
pi_cpms_distance$total_signal_minustwo<-pi_cpms_distance$V10+pi_cpms_distance$V21+pi_cpms_distance$V32+pi_cpms_distance$V43+pi_cpms_distance$V54
pi_cpms_distance<-pi_cpms_distance[order(pi_cpms_distance$total_signal_minustwo,decreasing = TRUE),]
mat<-as.matrix(pi_cpms_distance[,1:50])
hist(mat[which(mat>0)],breaks=1000,xlim=c(0,5))
hist(mat[which(mat>0)],breaks=10000,xlim=c(0,5))
mat[which(mat==0)]<-NA
logmat<-log2(mat)
hist(logmat,breaks=70)
hist(logmat,breaks=10000,xlim=c(0,5))
library(RColorBrewer)
pdf("pi_signal.pdf")
heatmap.2(logmat,trace="none",dendrogram="none",Rowv = FALSE,Colv = FALSE,
col=colorRampPalette(c("#921D29","#921D29","#d73027","#d73027","#fc8d59","#fee090","#ffffbf","#e0f3f8","#91bfdb","#4575b4","#4575b4","darkblue","darkblue","black","black")),
symm = T,na.color = "#921D29")
dev.off()
pdf("pi_signal_total_barplot.pdf")
barplot(colSums(pi_cpms_distance)[0:50],ylab="total piRNA cpm",space=0,border=NA)
dev.off()
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig5_CAGE_analyses/fragment_length_analysis/")
alignment_files <- list.files(path="./alignment_pis/", pattern="*bam.Nsorted.bam.bed12.pis.precreads")
alignment_files <- paste0("./alignment_pis/",alignment_files)
alignment_files
alignment_files <- alignment_files[c(1,2,3,4,6,7,8,5)]
names <-c("N2_EV_1","N2_EV_2","N2_ints11_1","N2_ints11_2","TFIIS_EV_2","TFIIS_ints11_1","TFIIS_ints11_2","totalRNA")
piRNA_overlapping_reads <- lapply(alignment_files,function(i){
read.csv(paste(i,sep=""), header=FALSE,sep="\t")
})
hist_data<-lapply(piRNA_overlapping_reads, function(df){
df$plus_d <- -(df$V14-df$V2)
df$minus_d <- -(df$V3-df$V15)
df_plus<-df[which(df$V6=="+"),]
df_minus<-df[which(df$V6=="-"),]
hist(c(df_plus$plus_d,df_minus$minus_d),breaks=seq(-30000,25))
hist(c(df_plus$plus_d,df_minus$minus_d),breaks=seq(-30000,25),xlim=c(-50,25))
})
piRNAprecs_2nt_upstream <- lapply(piRNA_overlapping_reads, function(df){
df$plus_d <- -(df$V14-df$V2)
df$minus_d <- -(df$V3-df$V15)
df_plus<-df[which(df$plus_d==(-2) & df$V6=="+"),]
df_minus<-df[which(df$minus_d==(-2) & df$V6=="-"),]
return(rbind(df_plus,df_minus))
})
piRNAprecs_2nt_upstream_typeI<-lapply(piRNAprecs_2nt_upstream,function(df){
df<-df[which(df$V1 %in% chrs),]
return(df[c(grep("^21UR-",df$V16),grep("^piRNA_type_1",df$V16)),])})
chrs<-c("I","II","III","IV","V","X")
piRNAprecs_2nt_upstream_typeI<-lapply(piRNAprecs_2nt_upstream,function(df){
df<-df[which(df$V1 %in% chrs),]
return(df[c(grep("^21UR-",df$V16),grep("^piRNA_type_1",df$V16)),])})
piRNAprecs_2nt_upstream_typeII<-lapply(piRNAprecs_2nt_upstream,function(df){
df<-df[which(df$V1 %in% chrs),]
return(df[grep("^piRNA_type_2",df$V16),])})
hist_data
hist_data<-lapply(piRNA_overlapping_reads, function(df){
df$plus_d <- -(df$V14-df$V2)
df$minus_d <- -(df$V3-df$V15)
df_plus<-df[which(df$V6=="+"),]
df_minus<-df[which(df$V6=="-"),]
hist(c(df_plus$plus_d,df_minus$minus_d),breaks=seq(-30000,25))
hist(c(df_plus$plus_d,df_minus$minus_d),breaks=seq(-30000,25),xlim=c(-50,25))
})
#do typeI and typeII separately
#aggregate number of reads per locus
#normalize to total SL1 and SL2-containing reads
#normalize to total mapped reads
#normalize to total mapped + SL1-SL2 containing reads
#aggregate total reads
number_of_piRNAreads_typeI <- unlist(lapply(piRNAprecs_2nt_upstream_typeI, function(df){return(nrow(df))}))
number_of_piRNAreads_typeII <- unlist(lapply(piRNAprecs_2nt_upstream_typeII, function(df){return(nrow(df))}))
number_of_detectedloci_typeI <- unlist(lapply(piRNAprecs_2nt_upstream_typeI, function(df){return(length(unique(df$V16)))}))
number_of_detectedloci_typeII <- unlist(lapply(piRNAprecs_2nt_upstream_typeII, function(df){return(length(unique(df$V16)))}))
SL1_reads<-read.table("SL1_SL2_abundance/SL1_counts_ext"); SL1_reads<-SL1_reads[c(1,3,5,7,11,13,15,9),"V2"]
SL2_reads<-read.table("SL1_SL2_abundance/SL2_counts_ext"); SL2_reads<-SL2_reads[c(1,3,5,7,11,13,15,9),"V2"]
total_mapped <- c(57363838,11289693,18508243,17497996,10811896,11666971,22677866,7133937)
#SL1+SL2 norm
pdf("typeI_pis_SLnorm.pdf")
barplot(number_of_piRNAreads_typeI/(SL1_reads+SL2_reads)*100,names=names,
ylab="type I piRNA TSS-mapping reads/total SL1+SL2 reads *100",las=2)
dev.off()
pdf("typeII_pis_SLnorm.pdf")
barplot(number_of_piRNAreads_typeII/(SL1_reads+SL2_reads)*100,names=names,
ylab="type II piRNA TSS-mapping reads/total SL1+SL2 reads *100",las=2)
dev.off()
#SL1 norm
barplot(number_of_piRNAreads_typeI/(SL1_reads)*100,names=names,
ylab="type I piRNA TSS-mapping reads/total SL1+SL2 reads *100",las=2)
barplot(number_of_piRNAreads_typeII/(SL1_reads)*100,names=names,
ylab="type II piRNA TSS-mapping reads/total SL1+SL2 reads *100",las=2)
#SL2 norm
barplot(number_of_piRNAreads_typeI/(SL2_reads)*100,names=names,
ylab="type I piRNA TSS-mapping reads/total SL1+SL2 reads *100",las=2)
barplot(number_of_piRNAreads_typeII/(SL2_reads)*100,names=names,
ylab="type II piRNA TSS-mapping reads/total SL1+SL2 reads *100",las=2)
#total mapped norm
pdf("typeI_pis_totalnorm.pdf")
barplot(number_of_piRNAreads_typeI/total_mapped*100,names=names,
ylab="type I piRNA TSS-mapping reads/total mapped reads *100",las=2)
dev.off()
pdf("typeII_pis_totalnorm.pdf")
barplot(number_of_piRNAreads_typeII/total_mapped*100,names=names,
ylab="type II piRNA TSS-mapping reads/total mapped reads *100",las=2)
dev.off()
plot_length_distributions<-lapply(piRNAprecs_2nt_upstream_typeI,function(df){
hist(df$V3-df$V2,breaks=seq(0,30000),xlim=c(0,2500))
return()})
plot_length_distributions<-lapply(piRNAprecs_2nt_upstream_typeI,function(df){
hist(df$V3-df$V2,breaks=seq(0,30000),xlim=c(0,2500))
return()})
boxplots<-function(dflist){
length.mlt <- melt(lapply(dflist,function(df){return(df$V3-df$V2)}))
length.mlt$L1 <- as.numeric(length.mlt$L1)
length.mlt$sample <- names[length.mlt$L1]
length.mlt$L1 <- factor(length.mlt$L1)
print(ggplot(length.mlt) +
geom_boxplot(aes(y=value,x=sample), position = 'identity')+
theme_classic()+
ylab("precursor length")+
coord_cartesian(y=c(0,5000)))
}
boxplots(piRNAprecs_2nt_upstream_typeI)
boxplots(piRNAprecs_2nt_upstream_typeII)
boxplots<-function(dflist){
length.mlt <- melt(lapply(dflist,function(df){return(df$V3-df$V2)}))
length.mlt$L1 <- as.numeric(length.mlt$L1)
length.mlt$sample <- names[length.mlt$L1]
length.mlt$L1 <- factor(length.mlt$L1)
print(ggplot(length.mlt) +
geom_boxplot(aes(y=value,x=sample), position = 'identity',outlier.shape = NA)+
theme_classic()+
ylab("precursor length"))
}
boxplots(piRNAprecs_2nt_upstream_typeI)
boxplots(piRNAprecs_2nt_upstream_typeII)
boxplots<-function(dflist){
length.mlt <- melt(lapply(dflist,function(df){return(df$V3-df$V2)}))
length.mlt$L1 <- as.numeric(length.mlt$L1)
length.mlt$sample <- names[length.mlt$L1]
length.mlt$L1 <- factor(length.mlt$L1)
print(ggplot(length.mlt) +
geom_boxplot(aes(y=value,x=sample), position = 'identity',outlier.shape = NA)+
theme_classic()+
ylab("precursor length")+
coord_cartesian(y=c(0,1500)))
}
boxplots(piRNAprecs_2nt_upstream_typeI)
boxplots(piRNAprecs_2nt_upstream_typeII)
boxplots(piRNAprecs_2nt_upstream_typeII,10000)
boxplots<-function(dflist,max){
length.mlt <- melt(lapply(dflist,function(df){return(df$V3-df$V2)}))
length.mlt$L1 <- as.numeric(length.mlt$L1)
length.mlt$sample <- names[length.mlt$L1]
length.mlt$L1 <- factor(length.mlt$L1)
print(ggplot(length.mlt) +
geom_boxplot(aes(y=value,x=sample), position = 'identity',outlier.shape = NA)+
theme_classic()+
ylab("precursor length")+
coord_cartesian(y=c(0,max)))
}
boxplots(piRNAprecs_2nt_upstream_typeI,1500)
boxplots(piRNAprecs_2nt_upstream_typeII,10000)
boxplots(piRNAprecs_2nt_upstream_typeII,25000)
boxplots(piRNAprecs_2nt_upstream_typeII,22000)
test<-melt(lapply(piRNAprecs_2nt_upstream_typeI,function(df){return(df$V3-df$V2)}))
ggplot(test)+geom_histogram(aes(x=value,fill=factor(L1)))
test$condition<-rep(NA,nrow(test))
test[which(test$L1==1 | test$L1==2),"condition"]<-"N2 EV"
test[which(test$L1==3 | test$L1==4),"condition"]<-"N2 ints-11 RNAi"
test[which(test$L1==5),"condition"]<-"TFIIS EV"
test[which(test$L1==6 | test$L1==7),"condition"]<-"TFIIS ints-11 RNAi"
test[which(test$L1==8),"condition"]<-"total RNA"
ggplot(test)+geom_histogram(aes(x = value,fill = factor(condition))) +
facet_grid(factor(condition) ~ .)+
ggtitle("total raw counts")+
xlab("fragment length (nt)")+
theme_classic()
#show normalized counts to avoid not being consistent with the star-mapped data
#have to calculate histograms independently, regenerate the table and do geom_col
maximum_length<-max(test$value) #2537
minimum_length<-min(test$value) #158
minbins<-0
maxbins<-2600
nbins<-75
get_normalized_histcounts<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(data.frame(cpm=histo$cpm,mids=histo$mids,sample=rep(sample_index,nbins)))
}
norm_cpm_data<-data.frame()
for (i in seq(8)){
norm_cpm_data<-rbind(norm_cpm_data,get_normalized_histcounts(i))
}
ggplot(norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(sample)),width=(maxbins-minbins)/nbins)+
facet_grid(factor(sample) ~ .)
get_normalized_histcounts_returncountsonly<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(histo$cpm)
}
averaged_norm_cpm_data<-data.frame(cpm=c((get_normalized_histcounts_returncountsonly(1)+get_normalized_histcounts_returncountsonly(2))/2,
(get_normalized_histcounts_returncountsonly(3)+get_normalized_histcounts_returncountsonly(4))/2,
get_normalized_histcounts_returncountsonly(5),
(get_normalized_histcounts_returncountsonly(6)+get_normalized_histcounts_returncountsonly(7))/2,
get_normalized_histcounts_returncountsonly(8)),
condition=c(rep("N2 EV",nbins),rep("N2 ints-11 RNAi",nbins),rep("TFIIS EV",nbins),rep("TFIIS ints-11 RNAi",nbins),rep("total",nbins)),
mids=rep(norm_cpm_data$mids[1:nbins],5))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+xlab("fragment length (nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeI_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins.pdf",sep=""))
mids<-averaged_norm_cpm_data$mids[1:nbins]
median_N2_EV<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])>0.5)[1]-1]
median_N2_ints11RNAi<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])>0.5)[1]-1]
median_TFIIS_EV<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])>0.5)[1]-1]
median_TFIIS_ints11RNAi<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])>0.5)[1]-1]
ggplot(norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=sample),width=(maxbins-minbins)/nbins)+
facet_grid(factor(sample) ~ .)+theme_classic()
names
get_normalized_histcounts<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(data.frame(cpm=histo$cpm,mids=histo$mids,sample=rep(names[sample_index],nbins)))
}
norm_cpm_data<-data.frame()
for (i in seq(8)){
norm_cpm_data<-rbind(norm_cpm_data,get_normalized_histcounts(i))
}
ggplot(norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(sample)),width=(maxbins-minbins)/nbins)+
facet_grid(factor(sample) ~ .)+theme_classic()
get_normalized_histcounts_returncountsonly<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(histo$cpm)
}
averaged_norm_cpm_data<-data.frame(cpm=c((get_normalized_histcounts_returncountsonly(1)+get_normalized_histcounts_returncountsonly(2))/2,
(get_normalized_histcounts_returncountsonly(3)+get_normalized_histcounts_returncountsonly(4))/2,
get_normalized_histcounts_returncountsonly(5),
(get_normalized_histcounts_returncountsonly(6)+get_normalized_histcounts_returncountsonly(7))/2,
get_normalized_histcounts_returncountsonly(8)),
condition=c(rep("N2 EV",nbins),rep("N2 ints-11 RNAi",nbins),rep("TFIIS EV",nbins),rep("TFIIS ints-11 RNAi",nbins),rep("total",nbins)),
mids=rep(norm_cpm_data$mids[1:nbins],5))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+xlab("fragment length (nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeI_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins.pdf",sep=""))
test<-melt(lapply(piRNAprecs_2nt_upstream_typeII,function(df){return(df$V3-df$V2)}))
test<-test[-which(test$value>20000),]
ggplot(test)+geom_histogram(aes(x=value,fill=factor(L1)))
max(test$value)
test$condition<-rep(NA,nrow(test))
test[which(test$L1==1 | test$L1==2),"condition"]<-"N2 EV"
test[which(test$L1==3 | test$L1==4),"condition"]<-"N2 ints-11 RNAi"
test[which(test$L1==5),"condition"]<-"TFIIS EV"
test[which(test$L1==6 | test$L1==7),"condition"]<-"TFIIS ints-11 RNAi"
test[which(test$L1==8),"condition"]<-"total RNA"
ggplot(test)+geom_histogram(aes(x = value,fill = factor(condition))) +
facet_grid(factor(condition) ~ .)+
ggtitle("total raw counts")+
xlab("fragment length (nt)")+
theme_classic()
test<-melt(lapply(piRNAprecs_2nt_upstream_typeII,function(df){return(df$V3-df$V2)}))
ggplot(test)+geom_histogram(aes(x=value,fill=factor(L1)))
maximum_length<-max(test$value) #2537
minimum_length<-min(test$value) #158
maximum_length
minimum_length
minimum_length<-min(test$value) #158
minimum_length
get_normalized_histcounts<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(data.frame(cpm=histo$cpm,mids=histo$mids,sample=rep(names[sample_index],nbins)))
}
norm_cpm_data<-data.frame()
for (i in seq(8)){
norm_cpm_data<-rbind(norm_cpm_data,get_normalized_histcounts(i))
}
test<-melt(lapply(piRNAprecs_2nt_upstream_typeII,function(df){return(df$V3-df$V2)}))
test<-test[-which(test$value>20000),]
ggplot(test)+geom_histogram(aes(x=value,fill=factor(L1)))
max(test$value)
test$condition<-rep(NA,nrow(test))
test[which(test$L1==1 | test$L1==2),"condition"]<-"N2 EV"
test[which(test$L1==3 | test$L1==4),"condition"]<-"N2 ints-11 RNAi"
test[which(test$L1==5),"condition"]<-"TFIIS EV"
test[which(test$L1==6 | test$L1==7),"condition"]<-"TFIIS ints-11 RNAi"
test[which(test$L1==8),"condition"]<-"total RNA"
#show normalized counts to avoid not being consistent with the star-mapped data
#have to calculate histograms independently, regenerate the table and do geom_col
maximum_length<-max(test$value) #839650
minimum_length<-min(test$value) #96
minbins<-0
maxbins<-20000
nbins<-1000
get_normalized_histcounts<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(data.frame(cpm=histo$cpm,mids=histo$mids,sample=rep(names[sample_index],nbins)))
}
norm_cpm_data<-data.frame()
for (i in seq(8)){
norm_cpm_data<-rbind(norm_cpm_data,get_normalized_histcounts(i))
}
ggplot(norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(sample)),width=(maxbins-minbins)/nbins)+
facet_grid(factor(sample) ~ .)
get_normalized_histcounts_returncountsonly<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(histo$cpm)
}
averaged_norm_cpm_data<-data.frame(cpm=c((get_normalized_histcounts_returncountsonly(1)+get_normalized_histcounts_returncountsonly(2))/2,
(get_normalized_histcounts_returncountsonly(3)+get_normalized_histcounts_returncountsonly(4))/2,
get_normalized_histcounts_returncountsonly(5),
(get_normalized_histcounts_returncountsonly(6)+get_normalized_histcounts_returncountsonly(7))/2,
get_normalized_histcounts_returncountsonly(8)),
condition=c(rep("N2 EV",nbins),rep("N2 ints-11 RNAi",nbins),rep("TFIIS EV",nbins),rep("TFIIS ints-11 RNAi",nbins),rep("total",nbins)),
mids=rep(norm_cpm_data$mids[1:nbins],5))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins.pdf",sep=""))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+xlim(0,2600)+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins_lowrange.pdf",sep=""))
mids<-averaged_norm_cpm_data$mids[1:nbins]
median_N2_EV<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])>0.5)[1]-1]
median_N2_ints11RNAi<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])>0.5)[1]-1]
median_TFIIS_EV<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])>0.5)[1]-1]
median_TFIIS_ints11RNAi<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])>0.5)[1]-1]
test<-melt(lapply(piRNAprecs_2nt_upstream_typeII,function(df){return(df$V3-df$V2)}))
test<-test[-which(test$value>20000),]
ggplot(test)+geom_histogram(aes(x=value,fill=factor(L1)))
max(test$value)
test$condition<-rep(NA,nrow(test))
test[which(test$L1==1 | test$L1==2),"condition"]<-"N2 EV"
test[which(test$L1==3 | test$L1==4),"condition"]<-"N2 ints-11 RNAi"
test[which(test$L1==5),"condition"]<-"TFIIS EV"
test[which(test$L1==6 | test$L1==7),"condition"]<-"TFIIS ints-11 RNAi"
test[which(test$L1==8),"condition"]<-"total RNA"
#show normalized counts to avoid not being consistent with the star-mapped data
#have to calculate histograms independently, regenerate the table and do geom_col
maximum_length<-max(test$value) #839650
minimum_length<-min(test$value) #96
minbins<-0
maxbins<-20000
nbins<-1000
get_normalized_histcounts<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(data.frame(cpm=histo$cpm,mids=histo$mids,sample=rep(names[sample_index],nbins)))
}
norm_cpm_data<-data.frame()
for (i in seq(8)){
norm_cpm_data<-rbind(norm_cpm_data,get_normalized_histcounts(i))
}
ggplot(norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(sample)),width=(maxbins-minbins)/nbins)+
facet_grid(factor(sample) ~ .)+theme_classic()
get_normalized_histcounts_returncountsonly<-function(sample_index){
histo<-hist(test[which(test$L1==sample_index),"value"],breaks=seq(minbins,maxbins,(maxbins-minbins)/nbins),plot = FALSE)
histo$cpm<-histo$counts/total_mapped[sample_index]*1e6
return(histo$cpm)
}
averaged_norm_cpm_data<-data.frame(cpm=c((get_normalized_histcounts_returncountsonly(1)+get_normalized_histcounts_returncountsonly(2))/2,
(get_normalized_histcounts_returncountsonly(3)+get_normalized_histcounts_returncountsonly(4))/2,
get_normalized_histcounts_returncountsonly(5),
(get_normalized_histcounts_returncountsonly(6)+get_normalized_histcounts_returncountsonly(7))/2,
get_normalized_histcounts_returncountsonly(8)),
condition=c(rep("N2 EV",nbins),rep("N2 ints-11 RNAi",nbins),rep("TFIIS EV",nbins),rep("TFIIS ints-11 RNAi",nbins),rep("total",nbins)),
mids=rep(norm_cpm_data$mids[1:nbins],5))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins.pdf",sep=""))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+coord_cartesian(x=c(0,2600))+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins_lowrange.pdf",sep=""))
mids<-averaged_norm_cpm_data$mids[1:nbins]
median_N2_EV<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 EV"),"cpm"])>0.5)[1]-1]
median_N2_ints11RNAi<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="N2 ints-11 RNAi"),"cpm"])>0.5)[1]-1]
median_TFIIS_EV<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS EV"),"cpm"])>0.5)[1]-1]
median_TFIIS_ints11RNAi<-0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])>0.5)[1]]+
0.5*mids[which(cumsum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])/sum(averaged_norm_cpm_data[which(averaged_norm_cpm_data$condition=="TFIIS ints-11 RNAi"),"cpm"])>0.5)[1]-1]
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+coord_cartesian(x=c(0,1500))+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins_lowrange.pdf",sep=""))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+coord_cartesian(x=c(0,1500),y=c(0,1500))+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins_lowrange.pdf",sep=""))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+coord_cartesian(x=c(0,1500),y=c(0,500))+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins_lowrange.pdf",sep=""))
ggplot(averaged_norm_cpm_data)+
geom_col(aes(x=mids,y=cpm,fill=factor(condition)),width=(maxbins-minbins)/nbins)+coord_cartesian(x=c(0,1500),y=c(0,400))+xlab("fragment length(nt)")+
facet_grid(factor(condition) ~ .)+theme_classic()
ggsave(paste(paste("typeII_pis_normalized_length_distributions_",toString(nbins),sep=""),"_bins_lowrange.pdf",sep=""))
