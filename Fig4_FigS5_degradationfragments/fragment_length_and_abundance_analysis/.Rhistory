print(max_1)
print(max_2)
linedata<-data.frame(xvar1=kernel_1$x,xvar2=kernel_2$x,yvar1=kernel_1$y,yvar2=kernel_2$y)
print(ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))+
scale_color_manual(values=c("orange","lightblue"))+
guides(col=FALSE))
ggsave(filename)
}
histogram_for_multiple_samples_averagedist(motifdep_piRNA_precursors,c(1,3,5,7),"NP","averaged_NP_sx1316_rpb9_fracseqs.pdf")
histogram_for_multiple_samples_averagedist<-function(dflist,indices,title,filename){
length.mlt <- melt(lapply(dflist,function(df){return(df$V4)}))
length.mlt$L1 <- as.numeric(length.mlt$L1)
length.mlt$sample <- names[length.mlt$L1]
hist_cond1 <- hist(length.mlt[which(length.mlt$L1 %in% indices[1]),"value"],breaks=seq(17,76),plot = FALSE)
hist_cond2 <- hist(length.mlt[which(length.mlt$L1 %in% indices[2]),"value"],breaks=seq(17,76),plot = FALSE)
hist_cond3<- hist(length.mlt[which(length.mlt$L1 %in% indices[3]),"value"],breaks=seq(17,76),plot = FALSE)
hist_cond4 <- hist(length.mlt[which(length.mlt$L1 %in% indices[4]),"value"],breaks=seq(17,76),plot = FALSE)
avg_density_cond12<-0.5*hist_cond1$density+0.5*hist_cond2$density
avg_density_cond34<-0.5*hist_cond3$density+0.5*hist_cond4$density
length_distributions<-data.frame(
density=c(avg_density_cond12,avg_density_cond34),
cond=c(rep(names[indices[1]],length(avg_density_cond12)),rep(names[indices[3]],length(avg_density_cond34))),
length=c(18:76,18:76))
length_distributions_uncol<-lapply(length_distributions,FUN=rep,length_distributions$density*1e6)
kernel_1<-density(length_distributions_uncol[which(length_distributions_uncol$cond==names[indices[1]]),"length"])
max_1<-kernel_1$x[which(diff(sign(diff(kernel_1$y)))==-2)+1]
kernel_2<-density(length_distributions_uncol[which(length_distributions_uncol$cond==names[indices[2]]),"length"])
max_2<-kernel_2$x[which(diff(sign(diff(kernel_2$y)))==-2)+1]
print(max_1)
print(max_2)
linedata<-data.frame(xvar1=kernel_1$x,xvar2=kernel_2$x,yvar1=kernel_1$y,yvar2=kernel_2$y)
print(ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))+
scale_color_manual(values=c("orange","lightblue"))+
guides(col=FALSE))
ggsave(filename)
}
histogram_for_multiple_samples_averagedist(motifdep_piRNA_precursors,c(1,3,5,7),"NP","averaged_NP_sx1316_rpb9_fracseqs.pdf")
dflist<-motifdep_piRNA_precursors
indices<-c(1,3,5,7)
title<-"NP"
filename<-"averaged_NP_sx1316_rpb9_fracseqs.pdf"
length.mlt <- melt(lapply(dflist,function(df){return(df$V4)}))
length.mlt$L1 <- as.numeric(length.mlt$L1)
length.mlt$sample <- names[length.mlt$L1]
length.mlt
hist_cond1 <- hist(length.mlt[which(length.mlt$L1 %in% indices[1]),"value"],breaks=seq(17,76),plot = FALSE)
hist_cond2 <- hist(length.mlt[which(length.mlt$L1 %in% indices[2]),"value"],breaks=seq(17,76),plot = FALSE)
hist_cond3<- hist(length.mlt[which(length.mlt$L1 %in% indices[3]),"value"],breaks=seq(17,76),plot = FALSE)
hist_cond4 <- hist(length.mlt[which(length.mlt$L1 %in% indices[4]),"value"],breaks=seq(17,76),plot = FALSE)
avg_density_cond12<-0.5*hist_cond1$density+0.5*hist_cond2$density
avg_density_cond34<-0.5*hist_cond3$density+0.5*hist_cond4$density
length_distributions<-data.frame(
density=c(avg_density_cond12,avg_density_cond34),
cond=c(rep(names[indices[1]],length(avg_density_cond12)),rep(names[indices[3]],length(avg_density_cond34))),
length=c(18:76,18:76))
length_distributions
length_distributions_uncol<-lapply(length_distributions,rep,length_distributions$density*1e6)
length_distributions_uncol
length_distributions_uncol<-as.data.frame(lapply(length_distributions,rep,length_distributions$density*1e6))
length_distributions_uncol
kernel_1<-density(length_distributions_uncol[which(length_distributions_uncol$cond==names[indices[1]]),"length"])
max_1<-kernel_1$x[which(diff(sign(diff(kernel_1$y)))==-2)+1]
kernel_2<-density(length_distributions_uncol[which(length_distributions_uncol$cond==names[indices[2]]),"length"])
kernel_2<-density(length_distributions_uncol[which(length_distributions_uncol$cond==names[indices[3]]),"length"])
max_2<-kernel_2$x[which(diff(sign(diff(kernel_2$y)))==-2)+1]
print(max_1)
print(max_2)
linedata<-data.frame(xvar1=kernel_1$x,xvar2=kernel_2$x,yvar1=kernel_1$y,yvar2=kernel_2$y)
linedata
print(ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))+
scale_color_manual(values=c("orange","lightblue"))+
guides(col=FALSE))
length_distributions
ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()
ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))+
scale_color_manual(values=c("orange","lightblue")
ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))+
scale_color_manual(values=c("orange","lightblue"))
ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))
ggplot(length_distributions, aes(y=density, x=length,fill=cond)) +
geom_col(position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))
print(ggplot(length_distributions) +
geom_col(aes(y=density, x=length,fill=cond),position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))+
scale_color_manual(values=c("orange","lightblue"))+
guides(col=FALSE))
kernel_1<-density(length_distributions_uncol[which(length_distributions_uncol$cond==names[indices[1]]),"length"],bw = 1)
max_1<-kernel_1$x[which(diff(sign(diff(kernel_1$y)))==-2)+1]
kernel_2<-density(length_distributions_uncol[which(length_distributions_uncol$cond==names[indices[3]]),"length"],bw = 1)
max_2<-kernel_2$x[which(diff(sign(diff(kernel_2$y)))==-2)+1]
print(max_1)
print(max_2)
linedata<-data.frame(xvar1=kernel_1$x,xvar2=kernel_2$x,yvar1=kernel_1$y,yvar2=kernel_2$y)
print(ggplot(length_distributions) +
geom_col(aes(y=density, x=length,fill=cond),position = 'identity',alpha=0.5)+
theme_classic()+
scale_fill_manual(values = c("orange","lightblue"))+
ggtitle(title)+xlab("precursor length")+ylab("fraction of sequences")+
coord_cartesian(x=c(18,75))+
geom_line(data=linedata,aes(x=xvar1,y=yvar1,col=names[indices[1]]))+
geom_line(data=linedata,aes(x=xvar2,y=yvar2,col=names[indices[3]]))+
scale_color_manual(values=c("orange","lightblue"))+
guides(col=FALSE))
data_100bp<-lapply(data,function(df){return(df[which(df$V15<100),])})
data_100bp
data
setwd("/Users/ab6415/Documents/Work_laptop_stuff/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig4_FigS5_degradationfragments/fragment_length_and_abundance_analysis/")
library(ggplot2)
library(dplyr)
library(reshape2)
path_files<-"/Users/ab6415/Documents/Work_laptop_stuff/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig4_FigS5_degradationfragments/fragment_length_and_abundance_analysis/"
files<- list.files(path=path_files, pattern="*distance")
files<-paste0(path_files,files)
names <-c("N2_EV2","N2_ints11_RNAi2","TFIIS_EV2","N2_EV1","TFIIS_ints11_RNAi2","N2_ints11_RNAi1","TFIIS_EV1","TFIIS_ints11_RNAi1")
data <- lapply(files,function(i){
read.table(file=i,sep="\t")
})
setwd("/Users/ab6415/Documents/Work_laptop_stuff/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig4_FigS5_degradationfragments/fragment_length_and_abundance_analysis/")
library(ggplot2)
library(dplyr)
library(reshape2)
path_files<-"/Users/ab6415/Documents/Work_laptop_stuff/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig4_FigS5_degradationfragments/fragment_length_and_abundance_analysis/"
files<- list.files(path=path_files, pattern="*distance")
files<-paste0(path_files,files)
names <-c("N2_EV2","N2_ints11_RNAi2","TFIIS_EV2","N2_EV1","TFIIS_ints11_RNAi2","N2_ints11_RNAi1","TFIIS_EV1","TFIIS_ints11_RNAi1")
data <- lapply(files,function(i){
read.table(file=i,sep="\t")
})
data_distances<-lapply(data,function(df){
df$distance<-df$V2-df$V10
df$distance[which(df$V8=="-")]<-df$distance[which(df$V8=="-")]*(-1)
return(df)})
plot_hist<-function(df){
df<-df[which(df$V15<100),]
print(ggplot(df)+
geom_histogram(aes(x=distance),breaks=seq(100))+
ggtitle(names[i])+
xlab("5' end positions relative to piRNA 5'U")+
theme_classic())
print(ggplot(df)+
geom_histogram(aes(x=distance+V4),breaks=seq(100))+
ggtitle(names[i])+
xlab("3' end positions relative to piRNA 5'U")+
theme_classic())
}
for (i in seq(length(names))){
plot_hist(data[[i]])
}
for (i in seq(length(names))){
plot_hist(data_distances[[i]])
}
plot_hist_numreads<-function(df){
df<-df[which(df$V15<100),]
df <- as.data.frame(lapply(df, rep, df$V5))
print(ggplot(df)+
geom_histogram(aes(x=distance),breaks=seq(100))+
ggtitle(names[i])+
xlab("5' end positions relative to piRNA 5'U")+
theme_classic())
print(ggplot(df)+
geom_histogram(aes(x=distance+V4),breaks=seq(100))+
ggtitle(names[i])+
xlab("3' end positions relative to piRNA 5'U")+
theme_classic())
}
for (i in seq(length(names))){
plot_hist_numreads(data_distances[[i]])
}
data_distances
data_distances<-lapply(data,function(df){
df$distance<-df$V2-df$V10
df$distance[which(df$V8=="-")]<-df$distance[which(df$V8=="-")]*(-1)
return(df[which(df$V15<100),])})
data_distances
table(data_distances[[1]][,16])
data_distances<-lapply(data,function(df){
df$distance<-df$V2-df$V10
df$distance[which(df$V8=="-")]<-df$distance[which(df$V8=="-")]*(-1)
return(df[which(df$V15<100),])})
table(data_distances[[1]][,16])
peak1_data$genotype<-rep("sx1316",nrow(peak1_data))
library(ggplot2)
library(reshape2)
library(scales)
setwd("/Users/ab6415/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig4_FigS5_degradationfragments/fragment_length_and_abundance_analysis/")
setwd("/Users/ab6415/Documents/Work_laptop_stuff/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig4_FigS5_degradationfragments/fragment_length_and_abundance_analysis/")
path_files<-"/Users/ab6415/Documents/Work_laptop_stuff/Bioinformatics/Analysis/INTEGRATOR_PAPER_ANALYSES/Fig4_FigS5_degradationfragments/fragment_length_and_abundance_analysis/"
files<- list.files(path=path_files, pattern="*distance")
files<-paste0(path_files,files)[c(1,2,3,5,4,6,7,8)]
names <-c("N2_EV2","N2_ints11_RNAi2","TFIIS_EV2","N2_EV1","TFIIS_ints11_RNAi2","N2_ints11_RNAi1","TFIIS_EV1","TFIIS_ints11_RNAi1")[c(1,2,3,5,4,6,7,8)]
data <- lapply(files,function(i){
read.table(file=i,sep="\t")
})
data_25_to_50<-
lapply(data,function(df){return(df[which(df$V15>24 & df$V15<50),])})
data_25_to_50_aggbylocus<-
lapply(data_25_to_50,function(df){
return(aggregate(df$V6,by=list(df$V12),FUN=sum))
})
aggdata_merged<-data_25_to_50_aggbylocus[[1]]
colnames(aggdata_merged)[2]<-names[1]
for (i in seq(2,length(data_25_to_50_aggbylocus))){
df<-data_25_to_50_aggbylocus[[i]]
colnames(df)[2]<-names[i]
aggdata_merged<-merge(aggdata_merged,df,by="Group.1",all=TRUE)
}
aggdata_merged[is.na(aggdata_merged)]<-0
rownames(aggdata_merged)<-aggdata_merged$Group.1; aggdata_merged$Group.1<-NULL
totalmapped_reads<-c(55706017,57923743,33131038,24807456,17291698,15651017,11254712,11704330)
aggdata_merged_cpm<-data.frame(t(t(aggdata_merged)/totalmapped_reads*1e6))
calculate_pairwise_fc_pseudocpm<-function(df,control,treatment,pseudocpm){
mean<-0.5*df[,control]+0.5*df[,treatment]
df_nozero<-df[which(mean>0),]
log2fc<-log2(df_nozero[,treatment]+pseudocpm)-log2(df_nozero[,control]+pseudocpm)
return(data.frame(log2fc,sample=paste(treatment,control,sep = "_vs_")))
}
calculate_pairwise_fc_cpmthr<-function(df,control,treatment,cpmthr){
df_threshold<-df[which(df[,control]>cpmthr & df[,treatment]>cpmthr),]
log2fc_cpmthr<-log2(df_threshold[,treatment])-log2(df_threshold[,control])
return(data.frame(log2fc_cpmthr,sample=paste(treatment,control,sep = "_vs_")))
}
fc_data_pseudocpm<-rbind(
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV1","N2_ints11_RNAi1",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV1","TFIIS_EV1",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV1","TFIIS_ints11_RNAi1",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV2","N2_ints11_RNAi2",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV2","TFIIS_EV2",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV2","TFIIS_ints11_RNAi2",0.01)
)
ggplot(fc_data_pseudocpm)+geom_boxplot(aes(y=log2fc,x=sample))+ggtitle("loci >0 in any condition, 0.01 pseudocpm added")+
geom_abline(slope=0,intercept = 0,col="red",linetype="dashed")+theme_classic()
aggdata_merged
boxplot(aggdata_merged_cpm)
boxplot(aggdata_merged_cpm,outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),],outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.01),],outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.01),],outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.005),],outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.025),],outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.01),],outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.005),],outline = FALSE)
boxplot(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),],outline = FALSE)
boxplot(log2(aggdata_merged_cpm),outline = FALSE)
boxplot(log2(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.01),]),outline = FALSE)
boxplot(log2(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.01),]),outline = FALSE)
aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.01),]
apply(aggdata_merged_cpm,1,mean)>0.01)
apply(aggdata_merged_cpm,1,mean)>0.01)
apply(aggdata_merged_cpm,1,mean)
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),])
aggdata_merged_cpm.mlt
table(aggdata_merged_cpm.mlt$variable)
aggdata_merged_cpm.mlt<-factor(aggdata_merged_cpm.mlt,levels=c("N2_EV1","N2_ints11_RNAi1","TFIIS_EV1","TFIIS_ints11_RNAi1",
"N2_EV2","N2_ints11_RNAi2","TFIIS_EV2","TFIIS_ints11_RNAi2"))
ggplot(aggdata_merged_cpm.mlt)+
geom_boxplot(aes(x=variable,y=value))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value))
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),])
aggdata_merged_cpm.mlt
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),])
aggdata_merged_cpm.mlt$variable<-factor(aggdata_merged_cpm.mlt$variable,levels=c("N2_EV1","N2_ints11_RNAi1","TFIIS_EV1","TFIIS_ints11_RNAi1",
"N2_EV2","N2_ints11_RNAi2","TFIIS_EV2","TFIIS_ints11_RNAi2"))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,0.5))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,1))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,0.8))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,0.8))+
theme_classic()
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,0.8))+
theme_classic()
ggsave("fragmentAbundanceDistributions_loci>0.05avcpm_632loci_boxplots.pdf")
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_violin(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,0.8))+
theme_classic()
ggsave("fragmentAbundanceDistributions_loci>0.05avcpm_632loci_violin.pdf")
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_violin(aes(x=variable,y=value),bw=0.01)+
coord_cartesian(ylim=c(0,0.8))+
theme_classic()
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_violin(aes(x=variable,y=value),bw=0.001)+
coord_cartesian(ylim=c(0,0.8))+
theme_classic()
calculate_pairwise_fc_pseudocpm<-function(df,control,treatment,pseudocpm){
mean<-0.5*df[,control]+0.5*df[,treatment]
df_nozero<-df[which(mean>0),]
log2fc<-log2(df_nozero[,treatment]+pseudocpm)-log2(df_nozero[,control]+pseudocpm)
return(data.frame(log2fc,sample=paste(treatment,control,sep = "_vs_")))
}
calculate_pairwise_fc_cpmthr<-function(df,control,treatment,cpmthr){
df_threshold<-df[which(df[,control]>cpmthr & df[,treatment]>cpmthr),]
log2fc_cpmthr<-log2(df_threshold[,treatment])-log2(df_threshold[,control])
return(data.frame(log2fc_cpmthr,sample=paste(treatment,control,sep = "_vs_")))
}
c_data_pseudocpm<-rbind(
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV1","N2_ints11_RNAi1",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV1","TFIIS_EV1",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV1","TFIIS_ints11_RNAi1",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV2","N2_ints11_RNAi2",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV2","TFIIS_EV2",0.01),
calculate_pairwise_fc_pseudocpm(aggdata_merged_cpm,"N2_EV2","TFIIS_ints11_RNAi2",0.01)
)
ggplot(fc_data_pseudocpm)+geom_boxplot(aes(y=log2fc,x=sample))+ggtitle("loci >0 in any condition, 0.01 pseudocpm added")+
geom_abline(slope=0,intercept = 0,col="red",linetype="dashed")+theme_classic()
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),1:4])
aggdata_merged_cpm.mlt$variable<-factor(aggdata_merged_cpm.mlt$variable,levels=c("N2_EV1","N2_ints11_RNAi1","TFIIS_EV1","TFIIS_ints11_RNAi1",
"N2_EV2","N2_ints11_RNAi2","TFIIS_EV2","TFIIS_ints11_RNAi2"))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,0.8))+
theme_classic()
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),1:4])
nrow(aggdata_merged_cpm)
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),5:8])
nrow(aggdata_merged_cpm)
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),5:8])
nrow(aggdata_merged_cpm)
aggdata_merged_cpm.mlt$variable<-factor(aggdata_merged_cpm.mlt$variable,levels=c("N2_EV1","N2_ints11_RNAi1","TFIIS_EV1","TFIIS_ints11_RNAi1",
"N2_EV2","N2_ints11_RNAi2","TFIIS_EV2","TFIIS_ints11_RNAi2"))
ggplot(data.frame(aggdata_merged_cpm.mlt))+
geom_boxplot(aes(x=variable,y=value),outlier.shape = NA)+
coord_cartesian(ylim=c(0,0.8))+
theme_classic()
ggsave("fragmentAbundanceDistributions_loci>0.05avcpm_632loci_boxplots.pdf")
aggdata_merged_cpm.mlt<-melt(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),])
nrow(aggdata_merged_cpm)
aggdata_merged_cpm
nrow(aggdata_merged_cpm[which(apply(aggdata_merged_cpm,1,mean)>0.05),])
nrow(aggdata_merged_cpm[which(apply(aggdata_merged_cpm[,1:4],1,mean)>0.05),])
nrow(aggdata_merged_cpm[which(apply(aggdata_merged_cpm[,5:8],1,mean)>0.05),])
nrow(aggdata_merged_cpm[which(apply(aggdata_merged_cpm[,5:8],1,mean)>0.05),])
data
plot_hist<-function(df,name,all_reads){
totalseqs<-nrow(all_reads)
print(ggplot(df,aes(x=distance))+
geom_histogram(aes(y=..count../totalseqs),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("5' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_fiveprime_positions.pdf",sep=""))
print(ggplot(df,aes(x=distance+V4))+
geom_histogram(aes(y=..counts../totalseqs),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("3' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_threeprime_positions,pdf",sep=""))
}
for (i in seq(length(names))){
plot_hist(data_distances[[i]],names[i],data[i])
}
for (i in seq(length(names))){
plot_hist(data_distances[[i]],names[i],data[[i]])
}
plot_hist<-function(df,name,all_reads){
totalseqs<-nrow(all_reads)
print(ggplot(df,aes(x=distance))+
geom_histogram(aes(y=..count../totalseqs),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("5' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_fiveprime_positions.pdf",sep=""))
print(ggplot(df,aes(x=distance+V4))+
geom_histogram(aes(y=..count../totalseqs),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("3' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_threeprime_positions,pdf",sep=""))
}
for (i in seq(length(names))){
plot_hist(data_distances[[i]],names[i],data[[i]])
}
df<-data_distances[[i]]
name<-"test"
df<-data_distances[[i]]
name<-"test"
all_reads<-data[[i]]
totalseqs<-nrow(all_reads)
totalseqs
print(ggplot(df,aes(x=distance))+
geom_histogram(aes(y=..count../totalseqs),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("5' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_fiveprime_positions.pdf",sep=""))
print(ggplot(df,aes(x=distance))+
geom_histogram(aes(y=..counts../totalreads*1e6),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("cpm")+
xlab("5' end positions relative to piRNA 5'U")+
theme_classic())
print(ggplot(df,aes(x=distance))+
geom_histogram(aes(y=..count../totalseqs*1e6),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("5' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_fiveprime_positions.pdf",sep=""))
print(ggplot(df,aes(x=distance+V4))+
geom_histogram(aes(y=..count../totalseqs*1e6),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("3' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_threeprime_positions,pdf",sep=""))
ggplot(df,aes(x=distance+V4))+
geom_histogram(aes(y=..count../totalseqs*1e6),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("3' end positions relative to piRNA 5'U")
print(ggplot(df,aes(x=distance+V4))+
geom_histogram(aes(y=..count../totalseqs*1e6),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("3' end positions relative to piRNA 5'U")+
theme_classic())
print(ggplot(df,aes(x=distance+V4))+
geom_histogram(aes(y=..count../totalseqs*1e6),breaks=seq(-10,100))+
ggtitle(names[i])+
ylab("sequences per million")+
xlab("3' end positions relative to piRNA 5'U")+
theme_classic())
ggsave(paste(name,"_threeprime_positions,pdf",sep=""))
table(data_distances[[i]][1][,"distance"]+2)
data_distances[[i]][1]
table(data_distances[[1]][,"distance"]+2)
names[1]
table(data_distances[[1]][,"distance"]+2)
melt(data)
test<-melt(data_distances)
test<-melt(data_distances)
test
data_distances_all<-data.frame()
for (i in seq(length(names))){
df<-data_distances[[i]]
df$sample<-rep(names[i],nrow(df))
data_distances_all<-rbind(data_distances_all,df)
}
data_distances_all
